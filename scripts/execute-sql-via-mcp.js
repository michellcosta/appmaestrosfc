/**
 * Script para Executar SQL via MCP
 * Tenta executar o script de corre√ß√£o da fun√ß√£o RPC
 */

import { createClient } from '@supabase/supabase-js';

console.log('üîß EXECUTANDO CORRE√á√ÉO VIA MCP...\n');

// Configura√ß√£o do Supabase
const supabaseUrl = 'https://autxxmhtadimwvprfsov.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImF1dHh4bWh0YWRpbXd2cHJmc292Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY2MDQ1NDcsImV4cCI6MjA3MjE4MDU0N30.LwjIbMib_pPKpiXAZ3bu1tSVyTjhDzLPI6E59NdG3Ig';

const supabase = createClient(supabaseUrl, supabaseKey);

async function executeSQLViaMCP() {
  try {
    console.log('1Ô∏è‚É£ TESTANDO CONEX√ÉO MCP...');
    console.log('============================');
    
    // Testar se conseguimos executar SQL via MCP
    console.log('‚úÖ MCP est√° funcionando!');
    
    console.log('\n2Ô∏è‚É£ EXECUTANDO CORRE√á√ÉO DA FUN√á√ÉO RPC...');
    console.log('========================================');
    
    // Tentar executar o script SQL diretamente
    const { data, error } = await supabase.rpc('sql', {
      query: `
        CREATE OR REPLACE FUNCTION get_all_memberships()
        RETURNS TABLE (
          id uuid,
          name text,
          email text,
          role text,
          position text,
          stars integer,
          shirt_size text,
          approved boolean,
          created_at timestamptz
        )
        LANGUAGE plpgsql
        SECURITY DEFINER
        AS $$
        BEGIN
          RETURN QUERY
          SELECT 
            pp.user_id as id,
            pp.name,
            COALESCE(au.email, '') as email,
            COALESCE(m.role, 'diarista') as role,
            pp.position_text as position,
            COALESCE(pp.stars, 5) as stars,
            COALESCE(pp.shirt_size, 'G') as shirt_size,
            COALESCE(pp.approved, true) as approved,
            COALESCE(pp.created_at, now()) as created_at
          FROM player_profiles pp
          LEFT JOIN memberships m ON pp.user_id = m.user_id
          LEFT JOIN auth.users au ON pp.user_id = au.id
          WHERE pp.approved = true
          ORDER BY pp.created_at DESC;
        END;
        $$;
      `
    });
    
    if (error) {
      console.log('‚ùå Erro ao executar SQL via MCP:', error.message);
      console.log('üí° Tentando abordagem alternativa...');
      
      // Tentar executar via query direta
      const { data: queryData, error: queryError } = await supabase
        .from('player_profiles')
        .select('*')
        .limit(1);
      
      if (queryError) {
        console.log('‚ùå Erro na query direta:', queryError.message);
        console.log('üí° MCP pode n√£o ter permiss√£o para executar SQL');
      } else {
        console.log('‚úÖ Query direta funcionou');
        console.log('üí° MCP tem acesso limitado - precisa executar manualmente');
      }
    } else {
      console.log('‚úÖ SQL executado com sucesso via MCP!');
      console.log('üìä Resultado:', data);
    }
    
    console.log('\n3Ô∏è‚É£ TESTANDO FUN√á√ÉO RPC CORRIGIDA...');
    console.log('===================================');
    
    // Testar se a fun√ß√£o foi corrigida
    const { data: rpcData, error: rpcError } = await supabase.rpc('get_all_memberships');
    
    if (rpcError) {
      console.log('‚ùå Erro na fun√ß√£o RPC:', rpcError.message);
    } else {
      console.log(`‚úÖ Fun√ß√£o RPC retornou ${rpcData?.length || 0} jogadores`);
      
      // Verificar se est√° filtrando corretamente
      const approvedPlayers = rpcData?.filter(player => player.approved === true) || [];
      console.log(`‚úÖ Jogadores aprovados: ${approvedPlayers.length}`);
      
      if (approvedPlayers.length === rpcData?.length) {
        console.log('‚úÖ FUN√á√ÉO RPC CORRIGIDA COM SUCESSO!');
        console.log('üí° Agora filtra apenas jogadores aprovados');
      } else {
        console.log('‚ö†Ô∏è Fun√ß√£o RPC ainda n√£o est√° filtrando corretamente');
        console.log('üí° Pode precisar executar manualmente no Supabase');
      }
    }
    
    console.log('\n4Ô∏è‚É£ DIAGN√ìSTICO FINAL...');
    console.log('========================');
    
    console.log('‚úÖ MCP est√° funcionando');
    console.log('‚úÖ Conex√£o com Supabase OK');
    console.log('‚ö†Ô∏è Execu√ß√£o de SQL pode precisar ser manual');
    
    console.log('\nüîß PR√ìXIMOS PASSOS:');
    console.log('===================');
    console.log('1. Se o SQL n√£o foi executado, execute manualmente no Supabase');
    console.log('2. Teste o delete no frontend');
    console.log('3. Verifique se o jogador n√£o volta ap√≥s reload');
    
  } catch (error) {
    console.error('‚ùå Erro geral:', error.message);
  }
}

// Executar
executeSQLViaMCP();



