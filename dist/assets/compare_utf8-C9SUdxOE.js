for(var t=[],n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",e=0;e<64;++e)t[e]=n[e];function r(n){return t[n>>18&63]+t[n>>12&63]+t[n>>6&63]+t[63&n]}function o(t,n,e){for(var o,i=[],s=n;s<e;s+=3)o=(t[s]<<16&16711680)+(t[s+1]<<8&65280)+(255&t[s+2]),i.push(r(o));return i.join("")}function i(n){for(var e,r=n.length,i=r%3,s=[],a=16383,f=0,u=r-i;f<u;f+=a)s.push(o(n,f,f+a>u?u:f+a));return 1===i?(e=n[r-1],s.push(t[e>>2]+t[e<<4&63]+"==")):2===i&&(e=(n[r-2]<<8)+n[r-1],s.push(t[e>>10]+t[e>>4&63]+t[e<<2&63]+"=")),s.join("")}function s(t){if(void 0===t)return{};if(!a(t))throw new Error(`The arguments to a Convex function must be an object. Received: ${t}`);return t}function a(t){const n="object"==typeof t,e=Object.getPrototypeOf(t),r=null===e||e===Object.prototype||"Object"===e?.constructor?.name;return n&&r}const f=BigInt("-9223372036854775808"),u=BigInt("9223372036854775807"),c=BigInt("0"),p=BigInt("8");BigInt("256");const h=DataView.prototype.setBigInt64?function(t){if(t<f||u<t)throw new Error(`BigInt ${t} does not fit into a 64-bit signed integer.`);const n=new ArrayBuffer(8);return new DataView(n).setBigInt64(0,t,!0),i(new Uint8Array(n))}:function(t){t<c&&(t-=f+f);let n=t.toString(16);n.length%2==1&&(n="0"+n);const e=new Uint8Array(new ArrayBuffer(8));let r=0;for(const o of n.match(/.{2}/g).reverse())e.set([parseInt(o,16)],r++),t>>=p;return i(e)};function w(t){if(t.length>1024)throw new Error(`Field name ${t} exceeds maximum field name length 1024.`);if(t.startsWith("$"))throw new Error(`Field name ${t} starts with a '$', which is reserved.`);for(let n=0;n<t.length;n+=1){const e=t.charCodeAt(n);if(e<32||e>=127)throw new Error(`Field name ${t} has invalid character '${t[n]}': Field names can only contain non-control ASCII characters`)}}function g(t){return JSON.stringify(t,(t,n)=>void 0===n?"undefined":"bigint"==typeof n?`${n.toString()}n`:n)}function d(t,n,e,r){if(void 0===t){const t=e&&` (present at path ${e} in original object ${g(n)})`;throw new Error(`undefined is not a valid Convex value${t}. To learn about Convex's supported types, see https://docs.convex.dev/using/types.`)}if(null===t)return t;if("bigint"==typeof t){if(t<f||u<t)throw new Error(`BigInt ${t} does not fit into a 64-bit signed integer.`);return{$integer:h(t)}}if("number"==typeof t){if(o=t,Number.isNaN(o)||!Number.isFinite(o)||Object.is(o,-0)){const n=new ArrayBuffer(8);return new DataView(n).setFloat64(0,t,true),{$float:i(new Uint8Array(n))}}return t}var o;if("boolean"==typeof t)return t;if("string"==typeof t)return t;if(t instanceof ArrayBuffer)return{$bytes:i(new Uint8Array(t))};if(Array.isArray(t))return t.map((t,r)=>d(t,n,e+`[${r}]`));if(t instanceof Set)throw new Error(l(e,"Set",[...t],n));if(t instanceof Map)throw new Error(l(e,"Map",[...t],n));if(!a(t)){const r=t?.constructor?.name;throw new Error(l(e,r?`${r} `:"",t,n))}const s={},c=Object.entries(t);c.sort(([t,n],[e,r])=>t===e?0:t<e?-1:1);for(const[i,a]of c)void 0!==a&&(w(i),s[i]=d(a,n,e+`.${i}`));return s}function l(t,n,e,r){return t?`${n}${g(e)} is not a supported Convex type (present at path ${t} in original object ${g(r)}). To learn about Convex's supported types, see https://docs.convex.dev/using/types.`:`${n}${g(e)} is not a supported Convex type.`}function y(t){return d(t,t,"")}const v=()=>Array.from({length:4},()=>0);v(),v();export{y as c,s as p};
