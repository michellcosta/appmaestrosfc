import{supabase as r}from"./supabase-DgB9yu4v.js";import{c as e,p as a,a as t}from"./gamesStore-NUrBWBVY.js";const o=e()(a((e,a)=>({players:[],teamDraw:null,currentMatchId:null,loading:!1,error:null,setCurrentMatch:r=>{e({currentMatchId:r})},loadPlayersFromTeamDraw:async a=>{e({loading:!0,error:null});try{const t=null;if(!t)return void e({teamDraw:null,players:[],loading:!1});const o=Object.values(t.teams).flat(),{data:s,error:l}=await r.from("users").select("*").in("id",o);if(l)throw new Error(`Erro ao carregar usuários: ${l.message}`);const n=[];Object.entries(t.teams).forEach(([r,e])=>{e.forEach(e=>{const a=s?.find(r=>r.id===e.id);a&&n.push({...a,team_color:r,is_substitute:!1})})}),e({teamDraw:t,players:n,currentMatchId:a,loading:!1})}catch(t){e({error:t.message||"Erro ao carregar jogadores",loading:!1})}},drawTeams:async(r,a=5)=>{e({loading:!0,error:null});try{const o=[],s=["convex_players","offline_players","local_players","players-store","nexus-play-players","app_players"];for(const r of s){const e=localStorage.getItem(r);if(e)try{const r=JSON.parse(e);if(Array.isArray(r)){if(r.length>0){r[0]}o.push(...r)}else r.players&&Array.isArray(r.players)?o.push(...r.players):r.state&&Array.isArray(r.state.players)&&o.push(...r.state.players)}catch(t){}}if(0===o.length)return void e({players:[],currentMatchId:r,loading:!1,error:"Nenhum jogador cadastrado. Cadastre jogadores no sistema primeiro."});const l=["Gol","Zaga","Meio","Atacante"],n=["Preto","Verde","Cinza","Vermelho"],i=o.filter(r=>{const e=r&&r.name;return e}).sort(()=>Math.random()-.5),c=[];let u=0;for(let r=0;r<n.length;r++){const e=n[r],t=i.length-u,o=n.length-r;let s;t>=a*o?s=a:(s=Math.floor(t/o),r<t%o&&(s+=1));for(let r=0;r<s&&u<i.length;r++){const r=i[u];c.push({...r,team_color:e,is_substitute:!1,position:r.position||l[Math.floor(Math.random()*l.length)]}),u++}}e({players:c,currentMatchId:r,loading:!1,error:null})}catch(o){e({error:o.message||"Erro ao sortear times",loading:!1})}},getPlayersByTeam:r=>a().players.filter(e=>e.team_color===r),getActivePlayersByTeam:r=>a().players.filter(e=>e.team_color===r&&!e.is_substitute),getAvailablePlayersForTeam:r=>a().players.filter(e=>e.team_color===r),getAllAvailablePlayers:()=>a().players.filter(r=>r.team_color),substitutePlayer:(r,a,t)=>{e(e=>({players:e.players.map(e=>e.id===r?{...e,is_substitute:!0,substituted_at:new Date}:e.id===a?{...e,team_color:t,is_substitute:!1}:e)}))},addSubstitution:(r,e,t)=>{const o=a(),s=o.getPlayerByName(e),l=o.getPlayerByName(t);if(!s)throw new Error(`Jogador "${e}" não encontrado`);if(!l)throw new Error(`Jogador "${t}" não encontrado`);if(s.team_color!==r)throw new Error(`Jogador "${e}" não pertence ao time ${r}`);if(l.team_color!==r)throw new Error(`Jogador "${t}" não pertence ao time ${r}`);if(s.is_substitute)throw new Error(`Jogador "${e}" já está no banco`);if(!l.is_substitute)throw new Error(`Jogador "${t}" já está em campo`);if(e===t)throw new Error("Jogador que sai deve ser diferente do que entra");o.substitutePlayer(s.id,l.id,r)},addPlayerToTeam:(r,a)=>{e(e=>({players:[...e.players,{...r,team_color:a,is_substitute:!1}]}))},removePlayerFromTeam:r=>{e(e=>({players:e.players.filter(e=>e.id!==r)}))},searchPlayers:r=>{const e=r.toLowerCase();return a().players.filter(r=>r.name.toLowerCase().includes(e)||r.position?.toLowerCase().includes(e))},getPlayerById:r=>a().players.find(e=>e.id===r),getPlayerByName:r=>a().players.find(e=>e.name.toLowerCase()===r.toLowerCase()),canPlayerScore:(r,e)=>{const t=a().getPlayerById(r);return t?.team_color===e&&!t?.is_substitute},canPlayerAssist:(r,e,t)=>{const o=a().getPlayerById(r),s=a().getPlayerById(e);return r!==e&&(o?.team_color===t&&s?.team_color===t&&!o?.is_substitute&&!s?.is_substitute)},clearTeamDraw:()=>{e({teamDraw:null,players:[],currentMatchId:null})},reset:()=>{e({players:[],teamDraw:null,currentMatchId:null,loading:!1,error:null})}}),{name:"players-store",storage:t(()=>localStorage),partialize:r=>({players:r.players,teamDraw:r.teamDraw,currentMatchId:r.currentMatchId})}));export{o as u};
