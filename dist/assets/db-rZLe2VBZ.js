import{supabase as r}from"./supabase-DgB9yu4v.js";import"./vendor-supabase-5K_8OYiR.js";import"./vendor-react-BSMgdr9Q.js";import"./vendor-ui-Bl6_fDik.js";async function t(t){const{groupId:o,teamCount:e,players:a,playersPerTeam:s}=t;try{const{data:t,error:n}=await r.from("matches").insert({group_id:o,status:"ongoing",started_at:(new Date).toISOString()}).select().single();if(n||!t)throw new Error(`Erro ao criar partida: ${n?.message||"Dados não retornados"}`);const i=t.id,d=["Preto","Verde","Cinza","Vermelho"].slice(0,e),{data:c,error:m}=await r.from("teams").insert(d.map(r=>({match_id:i,name:r,color:r}))).select();if(m||!c)throw new Error(`Erro ao criar times: ${m?.message||"Dados não retornados"}`);const h=function(r){const t=[...r];for(let o=t.length-1;o>0;o--){const r=Math.floor(Math.random()*(o+1));[t[o],t[r]]=[t[r],t[o]]}return t}([...a]),l=s||Math.floor(h.length/e),p=[];let f=0;for(let r=0;r<e;r++){const t=c[r],o=Math.min(l,h.length-f);for(let r=0;r<o;r++){const r=h[f];p.push({match_id:i,team_id:t.id,player_id:r.id,starter:!0}),f++}}for(;f<h.length;)for(let r=0;r<e&&f<h.length;r++){const t=c[r],o=h[f];p.push({match_id:i,team_id:t.id,player_id:o.id,starter:!0}),f++}if(p.length>0){const{error:t}=await r.from("match_players").insert(p);if(t)throw new Error(`Erro ao adicionar jogadores: ${t.message}`)}return{matchId:i}}catch(n){throw n}}export{t as createMatchWithTeams};
