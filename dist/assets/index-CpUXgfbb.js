import{r as e,b as t}from"./vendor-react-BSMgdr9Q.js";import{p as r,c as n}from"./compare_utf8-C9SUdxOE.js";const i=Symbol.for("functionName"),o=Symbol.for("toReferencePath");function s(e){let t;if("string"==typeof e)t=e.startsWith("function://")?{functionHandle:e}:{name:e};else if(e[i])t={name:e[i]};else{const r=e[o]??null;if(!r)throw new Error(`${e} is not a functionReference`);t={reference:r}}return t}function u(e){const t=s(e);if(void 0===t.name){if(void 0!==t.functionHandle)throw new Error(`Expected function reference like "api.file.func" or "internal.file.func", but received function handle ${t.functionHandle}`);if(void 0!==t.reference)throw new Error(`Expected function reference in the current component like "api.file.func" or "internal.file.func", but received reference ${t.reference}`);throw new Error(`Expected function reference like "api.file.func" or "internal.file.func", but received ${JSON.stringify(t)}`)}if("string"==typeof e)return e;const r=e[i];if(!r)throw new Error(`${e} is not a functionReference`);return r}function c(e){return{[i]:e}}!function e(t=[]){return new Proxy({},{get(r,n){if("string"==typeof n){return e([...t,n])}if(n===i){if(t.length<2){const e=["api",...t].join(".");throw new Error(`API path is expected to be of the form \`api.moduleName.functionName\`. Found: \`${e}\``)}const e=t.slice(0,-1).join("/"),r=t[t.length-1];return"default"===r?e:e+":"+r}return n===Symbol.toStringTag?"FunctionReference":void 0}})}();var a=Object.defineProperty,f=(e,t,r)=>((e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r)(e,"symbol"!=typeof t?t+"":t,r);class h{constructor(e,t){f(this,"low"),f(this,"high"),f(this,"__isUnsignedLong__"),this.low=0|e,this.high=0|t,this.__isUnsignedLong__=!0}static isLong(e){return!0===(e&&e.__isUnsignedLong__)}static fromBytesLE(e){return new h(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24)}toBytesLE(){const e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]}static fromNumber(e){return isNaN(e)||e<0?l:e>=y?g:new h(e%d|0,e/d|0)}toString(){return(BigInt(this.high)*BigInt(d)+BigInt(this.low)).toString()}equals(e){return h.isLong(e)||(e=h.fromValue(e)),(this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)}notEquals(e){return!this.equals(e)}comp(e){return h.isLong(e)||(e=h.fromValue(e)),this.equals(e)?0:e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1}lessThanOrEqual(e){return this.comp(e)<=0}static fromValue(e){return"number"==typeof e?h.fromNumber(e):new h(e.low,e.high)}}const l=new h(0,0),d=4294967296,y=d*d,g=new h(-1,-1);class v extends Error{}function w({getCurrentValue:t,subscribe:r}){const[n,i]=e.useState(()=>({getCurrentValue:t,subscribe:r,value:t()}));let o=n.value;return n.getCurrentValue===t&&n.subscribe===r||(o=t(),i({getCurrentValue:t,subscribe:r,value:o})),e.useEffect(()=>{let e=!1;const n=()=>{e||i(e=>{if(e.getCurrentValue!==t||e.subscribe!==r)return e;const n=t();return e.value===n?e:{...e,value:n}})},o=r(n);return n(),()=>{e=!0,o()}},[t,r]),o}if(v.prototype.name="InvalidTokenError",void 0===t)throw new Error("Required dependency 'react' not found");function b(e,t,r){function n(n){return function(e){if("object"==typeof e&&null!==e&&"bubbles"in e&&"persist"in e&&"isDefaultPrevented"in e)throw new Error("Convex function called with SyntheticEvent object. Did you use a Convex function as an event handler directly? Event handlers like onClick receive an event object as their first argument. These SyntheticEvent objects are not valid Convex values. Try wrapping the function like `const handler = () => myMutation();` and using `handler` in the event handler.")}(n),t.mutation(e,n,{optimisticUpdate:r})}return n.withOptimisticUpdate=function(n){if(void 0!==r)throw new Error(`Already specified optimistic update for mutation ${u(e)}`);return b(e,t,n)},n}const p=t.createContext(void 0);function m(){return e.useContext(p)}function q(t,...i){const o="skip"===i[0],s="skip"===i[0]?{}:r(i[0]),a="string"==typeof t?c(t):t,f=u(a),h=j(e.useMemo(()=>o?{}:{query:{query:a,args:s}},[JSON.stringify(n(s)),f,o])).query;if(h instanceof Error)throw h;return h}function E(t){const r="string"==typeof t?c(t):t,n=e.useContext(p);if(void 0===n)throw new Error("Could not find Convex client! `useMutation` must be used in the React component tree under `ConvexProvider`. Did you forget it? See https://docs.convex.dev/quick-start#set-up-convex-in-your-react-app");return e.useMemo(()=>b(r,n),[n,u(r)])}var x=Object.defineProperty,C=(e,t,r)=>((e,t,r)=>t in e?x(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r)(e,"symbol"!=typeof t?t+"":t,r);class S{constructor(e){C(this,"createWatch"),C(this,"queries"),C(this,"listeners"),this.createWatch=e,this.queries={},this.listeners=new Set}setQueries(e){for(const t of Object.keys(e)){const{query:r,args:i}=e[t];if(u(r),void 0===this.queries[t])this.addQuery(t,r,i);else{const e=this.queries[t];u(r)===u(e.query)&&JSON.stringify(n(i))===JSON.stringify(n(e.args))||(this.removeQuery(t),this.addQuery(t,r,i))}}for(const t of Object.keys(this.queries))void 0===e[t]&&this.removeQuery(t)}subscribe(e){return this.listeners.add(e),()=>{this.listeners.delete(e)}}getLocalResults(e){const t={};for(const n of Object.keys(e)){const{query:i,args:o}=e[n];u(i);const s=this.createWatch(i,o);let c;try{c=s.localQueryResult()}catch(r){if(!(r instanceof Error))throw r;c=r}t[n]=c}return t}setCreateWatch(e){this.createWatch=e;for(const t of Object.keys(this.queries)){const{query:e,args:r,watch:n}=this.queries[t],i=n.journal();this.removeQuery(t),this.addQuery(t,e,r,i)}}destroy(){for(const e of Object.keys(this.queries))this.removeQuery(e);this.listeners=new Set}addQuery(e,t,r,n){if(void 0!==this.queries[e])throw new Error(`Tried to add a new query with identifier ${e} when it already exists.`);const i=this.createWatch(t,r,n),o=i.onUpdate(()=>this.notifyListeners());this.queries[e]={query:t,args:r,watch:i,unsubscribe:o}}removeQuery(e){const t=this.queries[e];if(void 0===t)throw new Error(`No query found with identifier ${e}.`);t.unsubscribe(),delete this.queries[e]}notifyListeners(){for(const e of this.listeners)e()}}function j(t){const r=m();if(void 0===r)throw new Error("Could not find Convex client! `useQuery` must be used in the React component tree under `ConvexProvider`. Did you forget it? See https://docs.convex.dev/quick-start#set-up-convex-in-your-react-app");return function(t,r){const[n]=e.useState(()=>new S(r));n.createWatch!==r&&n.setCreateWatch(r);e.useEffect(()=>()=>n.destroy(),[n]);const i=e.useMemo(()=>({getCurrentValue:()=>n.getLocalResults(t),subscribe:e=>(n.setQueries(t),n.subscribe(e))}),[n,t]);return w(i)}(t,e.useMemo(()=>(e,t,n)=>r.watchQuery(e,t,n?{journal:n}:{}),[r]))}e.createContext(void 0);export{m as useConvex,E as useMutation,j as useQueries,q as useQuery,w as useSubscription};
